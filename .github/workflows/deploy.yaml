name: Deploy production

on:
  workflow_dispatch: ~
  push:
    tags:
      - v2.*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  deploy-production:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    environment:
      name: production
      url: https://www.rix.fr

    # Expose some Github Workflow variables using a matrix, to be used in next steps:
    strategy:
      matrix:
        include:
          - name: 'ðŸš§  Build & deploy ðŸš€'
            WEBSITE_URL: https://www.rix.fr
            DEPLOY_PATH: /srv/app/website
            MATOMO_ID: 10

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Configure deployer SSH key'
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY_PRODUCTION }}

      # https://github.com/actions/setup-node
      - name: 'Setup node'
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          ini-values: "memory_limit=-1"
          php-version: "8.1"

      - name: 'Cache resized images'
        uses: actions/cache@v2
        with:
          path: public/resized
          key: resized-images-${{ github.workflow }}-${{ secrets.CACHE_VERSION }}

      - name: 'Determine composer cache directory'
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: 'Cache composer dependencies'
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: composer-${{ hashFiles('composer.lock') }}

      - name: 'Cache NPM dependencies'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('package-lock.json') }}

      - name: 'Install dependencies'
        run: |
          echo "::group::composer install"
            composer install --no-progress --ansi
          echo "::endgroup::"

          echo "::group::npm install"
            npm install --color=always --no-progress
          echo "::endgroup::"

      - name: 'Warmup'
        run: |
          echo "::group::warmup production env"
            npx encore production --color
            bin/console cache:clear --ansi
            bin/console cache:warmup --ansi
          echo "::endgroup::"
        env:
          APP_ENV: prod

      - name: 'Build static site'
        run: bin/console stenope:build --no-interaction -vv --ansi --ignore-content-not-found
        env:
          APP_ENV: prod
          ROUTER_DEFAULT_URI: ${{ matrix.WEBSITE_URL }}
          INCLUDE_SAMPLES: 0
          SHOW_UNPUBLISHED_ARTICLES: 0
          MATOMO_ID: ${{ matrix.MATOMO_ID }}

      - name: 'ðŸš€ Deploy'
        run: |
          rsync build/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ matrix.DEPLOY_PATH }} \
            --human-readable \
            --compress \
            --archive \
            --delete \
            --rsh "ssh -o StrictHostKeyChecking=no" \
            --itemize-changes \
          ;
